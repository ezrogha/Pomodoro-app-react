{"version":3,"sources":["assests/favicon.ico","assests/bus-horn.mp3","assests/aron-visuals-BXOXnQ26B7o-unsplash.jpg","components/helpers.js","components/Pomodoro.js","custom hooks/pomodoroCounter.js","components/PomoButton.js","components/ConfirmModal.js","components/InputRange.js","components/SettingsModal.js","components/Stats.js","components/Settings.js","components/PomoCycles.js","components/index.js","granim/granim.js","serviceWorker.js","index.js"],"names":["module","exports","notify","state","audio","Audio","src","Alarm","play","title","options","body","image","Icon","window","Notification","permission","requestPermission","then","alert","Pomodoro","props","pomoState","pomodoro_duration","short_break_duration","long_break_duration","handleStartAgain","useState","setState","pomodoroCount","setPomodoroCount","totalSeconds","setTotalSeconds","minutes","setMinutes","seconds","setSeconds","pauseTime","setPauseTime","useEffect","interval","setInterval","console","log","clearInterval","Math","floor","usePomodoroTimer","time","pomodoroStatus","addZero","value","strval","toString","length","currentTime","document","currentPomodoroCount","currentPomodoroStatus","PomoButton","isDisabled","handlePress","buttonText","iconName","Button","disabled","color","animated","size","fluid","inverted","onClick","Content","visible","hidden","name","ConfirmModal","isModalOpen","stopClicked","handleStop","Modal","basic","open","Header","icon","content","Actions","RangeContainer","styled","div","StyledRange","input","InputRange","label","type","step","SettingsModal","isOpen","closeModal","updatedPomoData","shortBreakRangeValue","setShortBreakRangeValue","longBreakRangeValue","setLongBreakRangeValue","pomoRangeValue","setPomoRangeValue","handleChange","e","target","pomodoroValues","Number","min","max","onChange","bind","this","Stats","today","Statistic","Group","Value","Label","SettingsIcon","Settings","openDialog","loading","setLoading","onMouseOver","onMouseLeave","StyledLoaderContainer","StyledLoader","Loader","CylesContainer","pomos","pomoCount","status","pomoArray","i","push","height","width","PomoCycles","pomodoroState","StyledHeader","h1","App","setPomoState","startButtonText","setStartButtonText","isStopDisabled","setIsStopDisabled","SetModalState","isSettingsModalOpen","setSettingsModalState","setPomodoroStatus","setPomodoroValues","closeSettingsModal","Container","textAlign","Grid","stackable","centered","Column","style","marginTop","Row","as","Granim","element","direction","isPausedWhenNotInView","source","BackgroundImage","blendingMode","stretchMode","states","gradients","transitionSpeed","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23974a23.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.33d46e7c.ico\";","module.exports = __webpack_public_path__ + \"static/media/bus-horn.6e4413c4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/aron-visuals-BXOXnQ26B7o-unsplash.e9acea51.jpg\";","import Icon from '../assests/favicon.ico';\nimport Alarm from '../assests/bus-horn.mp3';\n\nexport function notify(state) {\n  const audio = new Audio();\n  audio.src = Alarm;\n  audio.play();\n\n  const [title, body] = state === 'break' ? ['🧘Break Time!', \"It's time for your break, disconnect yourself from your work to be more productive in the next session\"] : ['⚒️Work Time', \"It's time to work, Remember why you started and make every minute count\"]\n\n  const options = {\n    body,\n    image: Icon,\n  };\n\n  if (!('Notification' in window)) {\n    alert('This browser does not support desktop notification');\n  } else if (Notification.permission === 'granted') {\n    new Notification(title, options);\n  } else if (Notification.permission !== 'denied') {\n    Notification.requestPermission().then((permission) => {\n      if (permission === 'granted') {\n        new Notification(title, options);\n      }\n    });\n  }\n  // At last, if the user has denied notifications, and you\n  // want to be respectful there is no need to bother them any more.\n}\n","import React, { useEffect } from 'react';\nimport usePomodoroTimer from '../custom hooks/pomodoroCounter';\nimport PropTypes from 'prop-types'\n\nexport default function Pomodoro (props){\n\tconst [time, pomodoroCount, pomodoroStatus] = usePomodoroTimer(props)\n\tuseEffect(() => {\n\t\tdocument.title = currentTime()\n\t})\n\tfunction addZero(value) {\n\t\tconst strval = value.toString();\n\t\treturn strval.length < 2 ? `0${strval}` : strval;\n\t}\n\tfunction currentTime(){\n\t\treturn `${addZero(time.minutes)}:${addZero(time.seconds)}`\n\t}\n\tprops.currentPomodoroCount(pomodoroCount)\n\tprops.currentPomodoroStatus(pomodoroStatus)\n\treturn (\n\t\t<div>\n\t\t\t<span>{currentTime()}</span>\n\t\t</div>\n\t)\n}\n\nPomodoro.propTypes = {\n\tcurrentPomodoroCount: PropTypes.number,\n\tcurrentPomodoroStatus: PropTypes.number\n}\n\n\n","import { useState, useEffect } from 'react';\nimport { notify } from '../components/helpers';\n\nexport default function usePomodoroTimer({ pomoState, pomodoro_duration, short_break_duration, long_break_duration, handleStartAgain }){\n\tconst [state, setState] = useState('pomodoro');\n\tconst [pomodoroCount, setPomodoroCount] = useState(1);\n\tconst [totalSeconds, setTotalSeconds] = useState(pomodoro_duration*60);\n\tconst [minutes, setMinutes] = useState(pomodoro_duration);\n\tconst [seconds, setSeconds] = useState(0);\n\tconst [pauseTime, setPauseTime] = useState(0);\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tif (pomoState === 'start' || pomoState === 'resume') {\n\t\t\t\tconsole.log([totalSeconds, state, pomodoroCount])\n\t\t\t\tif (totalSeconds === 0 && state === 'pomodoro') {\n\t\t\t\t\tsetPomodoroCount(pomodoroCount + 1)\n\t\t\t\t\tsetMinutes(0)\n\t\t\t\t\tsetSeconds(0)\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\tif (pomodoroCount % 4 === 0 && pomodoroCount !== 0) {\n            notify('break');\n\t\t\t\t\t\tsetState('long_break')\n\t\t\t\t\t\tsetTotalSeconds(long_break_duration * 60)\n\t\t\t\t\t} else {\n            notify('break');\n\t\t\t\t\t\tsetState('short_break')\n\t\t\t\t\t\tsetTotalSeconds(short_break_duration * 60)\n\t\t\t\t\t}\n\t\t\t\t} else if ((state === 'short_break' || state === 'long_break') && totalSeconds === 0) {\n          notify('work');\n\t\t\t\t\tsetState('pomodoro')\n\t\t\t\t\tsetTotalSeconds(pomodoro_duration*60)\n\t\t\t\t\tsetMinutes(pomodoro_duration)\n\t\t\t\t\tsetSeconds(0)\n\t\t\t\t\tclearInterval(interval)\n\t\t\t\t\thandleStartAgain()\n\t\t\t\t} else {\n\t\t\t\t\tsetPauseTime(0)\n\t\t\t\t\tsetMinutes(Math.floor(totalSeconds / 60))\n\t\t\t\t\tsetSeconds(totalSeconds % 60)\n\t\t\t\t\tsetTotalSeconds(totalSeconds - 1)\n\t\t\t\t}\n\t\t\t} else if (pomoState === 'stop') {\n\t\t\t\thandleStartAgain()\n\t\t\t\tsetTotalSeconds(pomodoro_duration * 60)\n\t\t\t\tsetMinutes(pomodoro_duration)\n\t\t\t\tsetSeconds(0)\n\t\t\t} else if (pomoState === 'pause') {\n\t\t\t\tif (pauseTime === 5 * 60 || pauseTime === 10 * 60) {\n\t\t\t\t\talert(\"Don't rest for too long, get back into the zone\")\n\t\t\t\t}\n\t\t\t\tsetPauseTime(pauseTime + 1)\n\t\t\t\tsetTotalSeconds(totalSeconds)\n\t\t\t}\n\t\t}, 1000)\n\t\treturn () => clearInterval(interval)\n\t})\n\n\treturn [{\n\t\tminutes,\n\t\tseconds\n\t}, pomodoroCount, state]\n}\n","import React from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nexport default function PomoButton({ isDisabled = false, handlePress, buttonText }) {\n\n\tlet iconName = '';\n\tif (buttonText === 'Stop') {\n\t\ticonName = 'stop';\n\t} else if (buttonText === 'Pause') {\n\t\ticonName = 'pause';\n\t} else {\n\t\ticonName = 'play';\n\t}\n\n\treturn (\n\t\t<Button disabled={isDisabled} color=\"blue\" animated=\"fade\" size=\"huge\" fluid inverted onClick={handlePress}>\n\t\t\t<Button.Content visible>{buttonText}</Button.Content>\n\t\t\t<Button.Content hidden>\n\t\t\t\t<Icon name={iconName} />\n\t\t\t</Button.Content>\n\t\t</Button>\n\t)\n}\n\nPomoButton.propTypes = {\n\tisDisabled: PropTypes.bool,\n\thandlePress: PropTypes.func,\n\tbuttonText: PropTypes.bool\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Header, Button, Icon } from 'semantic-ui-react';\n\nexport default function ConfirmModal({ isModalOpen, stopClicked, handleStop }) {\n\treturn (\n  <Modal basic size='small' open={isModalOpen}>\n    <Header icon='ban' content='Cancel Pomodoro Session' />\n    <Modal.Content>\n      <p>\n\t\t\t\t\tAre you really sure about this?<br />\n\t\t\t\t\tKindly note that the time used sofar will not be archived.\n    </p>\n    </Modal.Content>\n    <Modal.Actions>\n      <Button basic color='red' inverted onClick={stopClicked}>\n      <Icon name='remove' /> No\n    </Button>\n      <Button color='green' inverted onClick={handleStop}>\n      <Icon name='checkmark' /> Yes\n    </Button>\n    </Modal.Actions>\n  </Modal>\n\t)\n}\n\nConfirmModal.propTypes = {\n\tisModalOpen: PropTypes.bool,\n\tstopClicked: PropTypes.func,\n\thandleStop: PropTypes.func\n}","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst RangeContainer = styled.div`\n\tmargin-bottom: 20px;\n`;\n\nconst StyledRange = styled.input`\n  width: 100%;\n`;\n\nexport default function InputRange(props) {\n  const { label, value } = props;\n  return (\n    <RangeContainer>\n      <label>\n        {label}: {value} minutes\n        <StyledRange type=\"range\" step=\"1\" { ...props } />\n      </label>\n    </RangeContainer>\n  )\n}\n\nInputRange.propTypes = {\n\tlabel: PropTypes.number,\n\tvalue: PropTypes.number\n}\n","import React, { useState } from 'react';\nimport { Modal, Header, Button } from 'semantic-ui-react';\n\nimport InputRange from './InputRange';\nimport PropTypes from 'prop-types';\n\n\n\nexport default function SettingsModal({ isOpen, closeModal, updatedPomoData }) {\n\tconst [shortBreakRangeValue, setShortBreakRangeValue] = useState(5)\n\tconst [longBreakRangeValue, setLongBreakRangeValue] = useState(15)\n\tconst [pomoRangeValue, setPomoRangeValue] = useState(25)\n\n\tconst handleChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tif (name === 'short') {\n\t\t\tsetShortBreakRangeValue(value);\n\t\t} else if (name === 'long') {\n\t\t\tsetLongBreakRangeValue(value)\n\t\t} else {\n\t\t\tsetPomoRangeValue(value)\n\t\t}\n\t}\n\tconst pomodoroValues = {\n\t\tshort_break_duration: Number(shortBreakRangeValue),\n\t\tlong_break_duration: Number(longBreakRangeValue),\n\t\tpomodoro_duration: Number(pomoRangeValue)\n\t}\n\treturn (\n\t\t<Modal open={isOpen} basic size='small'>\n\t\t\t<Header icon='settings' content='Adjust the Pomodoro' />\n\t\t\t<Modal.Content>\n\t\t\t\t<p>\n\t\t\t\t\t<InputRange\n\t\t\t\t\t\tlabel='Short Break'\n\t\t\t\t\t\tname='short'\n\t\t\t\t\t\tvalue={shortBreakRangeValue}\n\t\t\t\t\t\tmin=\"1\" max=\"15\"\n\t\t\t\t\t\t// min=\"3\" max=\"15\"\n\t\t\t\t\t\tonChange={handleChange.bind(this)} />\n\n\t\t\t\t\t<InputRange\n\t\t\t\t\t\tlabel='Long Break'\n\t\t\t\t\t\tname='long'\n\t\t\t\t\t\tvalue={longBreakRangeValue}\n\t\t\t\t\t\tmin=\"1\" max=\"30\"\n\t\t\t\t\t\t// min=\"10\" max=\"30\"\n\t\t\t\t\t\tonChange={handleChange.bind(this)} />\n\n\t\t\t\t\t<InputRange\n\t\t\t\t\t\tlabel='Pomodoro'\n\t\t\t\t\t\tname='pomo'\n\t\t\t\t\t\tvalue={pomoRangeValue}\n\t\t\t\t\t\tmin=\"1\" max=\"60\"\n\t\t\t\t\t\t// min=\"20\" max=\"60\"\n\t\t\t\t\t\tonChange={handleChange.bind(this)} />\n\t\t\t\t</p>\n\t\t\t</Modal.Content>\n\t\t\t<Modal.Actions>\n\t\t\t\t<Button basic color='red' inverted onClick={closeModal}>\n\t\t\t\t\tDiscard\n          </Button>\n\t\t\t\t<Button color='green' inverted onClick={() => updatedPomoData(pomodoroValues)}>\n\t\t\t\t\tSave\n          </Button>\n\t\t\t</Modal.Actions>\n\t\t</Modal>\n\t)\n}\n\n\nSettingsModal.propTypes = {\n\tisOpen: PropTypes.bool,\n\tcloseModal: PropTypes.func,\n\tupdatedPomoData: PropTypes.func\n}\n","import React from 'react';\nimport { Statistic } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nexport default function Stats({ today }) {\n\treturn (\n\t\t<Statistic.Group inverted>\n\t\t\t<Statistic>\n\t\t\t\t<Statistic.Value>{today}</Statistic.Value>\n\t\t\t\t<Statistic.Label>Today</Statistic.Label>\n\t\t\t</Statistic>\n\t\t\t<Statistic>\n\t\t\t\t<Statistic.Value>{today}</Statistic.Value>\n\t\t\t\t<Statistic.Label>This Week</Statistic.Label>\n\t\t\t</Statistic>\n\t\t\t<Statistic>\n\t\t\t\t<Statistic.Value>{today}</Statistic.Value>\n\t\t\t\t<Statistic.Label>This Month</Statistic.Label>\n\t\t\t</Statistic>\n\t\t</Statistic.Group>\n\t)\n}\n\nStats.propTypes = {\n\ttoday: PropTypes.number\n}\n","import React, { useState } from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst SettingsIcon = styled.div`\n    z-index: 10;\n    position: absolute;\n    top: 30px;\n    right: 50px;\n    color: grey;\n    :hover {\n        cursor: pointer;\n        font-size: 17px\n    }\n    transition: 0.1s;\n`\n\nexport default function Settings({ openDialog }) {\n    const [loading, setLoading] = useState(false)\n    const onHoverIn = () => {\n        setLoading(true)\n    }\n    const onHoverOut = () => {\n        setLoading(false)\n    }\n    return (\n        <SettingsIcon\n            onClick={openDialog}\n            onMouseOver={onHoverIn.bind(this)}\n            onMouseLeave={onHoverOut.bind(this)}\n        >\n            <Icon name='setting' size='big' loading={loading} />\n            Settings\n        </SettingsIcon>\n    )\n}\n\nSettings.propTypes = {\n    openDialog: PropTypes.func\n}\n","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport Loader from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\n\nconst StyledLoaderContainer = styled.div`\n    position: relative;\n    display: inline-block;\n    width: 30px;\n    height: 30px;\n    margin-right: 9px;\n    margin-left: 5px;\n`\n\nconst StyledLoader = styled(Loader)`\n    top: 0;\n    left: 0;\n    display: inline-block;\n    position: absolute;\n    padding-top: 10px\n`\n\nconst CylesContainer = styled.div`\n    position: absolute;\n    top: 20px;\n    left: 50px;\n    // border: 1px solid red;\n    color: rgb(84, 200, 255);\n`\n\nconst pomos = (pomoCount, pomoState, status) => {\n\tlet pomoArray = []\n\tfor (let i = 1; i < 5; i++) {\n\t\tif (pomoCount > i) {\n\t\t\tpomoArray.push(<Icon name=\"check circle outline\" size=\"big\" />)\n\t\t} else if (pomoCount < i) {\n\t\t\tpomoArray.push(<Icon name=\"circle outline\" size=\"big\" disabled />)\n\t\t} else {\n\t\t\tpomoArray.push(<StyledLoaderContainer>\n\t\t\t\t<StyledLoader\n\t\t\t\t\ttype=\"Puff\"\n\t\t\t\t\tcolor={(status !== 'pomodoro' || pomoState === null) ? \"grey\" : \"#00BFFF\"}\n\t\t\t\t\theight={30}\n\t\t\t\t\twidth={30}\n\t\t\t\t/>\n\t\t\t</StyledLoaderContainer>)\n\t\t}\n\n\t}\n\treturn pomoArray;\n}\n\nexport default function PomoCycles({ pomodoroCount, pomodoroState: { pomoState, pomodoroStatus } }) {\n\treturn (\n\t\t<CylesContainer>\n\t\t\t{pomos(pomodoroCount, pomoState, pomodoroStatus)}\n\t\t</CylesContainer>\n\t)\n}\n\n\nPomoCycles.propTypes = {\n\tpomodoroCount: PropTypes.number,\n\tpomodoroState: PropTypes.string\n}","import React, { useState } from 'react';\nimport { Container, Header, Grid } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport Pomodoro from './Pomodoro';\nimport PomoButton from './PomoButton';\nimport ConfirmModal from './ConfirmModal';\nimport SettingsModal from './SettingsModal';\nimport Stats from './Stats';\nimport Settings from './Settings';\nimport PomoCycles from './PomoCycles';\n\nconst StyledHeader = styled.h1`\n\tcolor: white;\n\tfont-weight: normal;\n\tfont-size: 13em;\n\tmargin-top: 0.5em;\n\t@media only screen and (max-width: 875px) {\n\t\tmargin-top: 1em;\n\t\tfont-size: 9em;\n\t}\n\t@media only screen and (max-width: 380px) {\n\t\tmargin-top: 2em;\n    font-size: 5em;\n  }\n`;\nconst App = () => {\n  const [pomoState, setPomoState] = useState(null);\n  const [startButtonText, setStartButtonText] = useState('Start');\n  const [isStopDisabled, setIsStopDisabled] = useState(true);\n  const [isModalOpen, SetModalState] = useState(false);\n  const [isSettingsModalOpen, setSettingsModalState] = useState(false);\n  const [pomodoroCount, setPomodoroCount] = useState(0);\n  const [pomodoroStatus, setPomodoroStatus] = useState(null);\n\n  const defaultPomodorovalues = {\n    short_break_duration: 5,\n    long_break_duration: 15,\n    pomodoro_duration: 25,\n  };\n  const [pomodoroValues, setPomodoroValues] = useState(defaultPomodorovalues);\n  function handleStart() {\n    if (startButtonText === 'Pause') {\n      setStartButtonText('Resume');\n      setPomoState('pause');\n    } else if (startButtonText === 'Start') {\n      setStartButtonText('Pause');\n      setPomoState('start');\n      setIsStopDisabled(false);\n    } else if (startButtonText === 'Resume') {\n      setStartButtonText('Pause');\n      setPomoState('resume');\n    }\n  }\n  function stopClicked() {\n    SetModalState(!isModalOpen);\n  }\n  function handleStop() {\n    setPomoState('stop');\n    setIsStopDisabled(true);\n    SetModalState(false);\n  }\n  function handleStartAgain() {\n    setStartButtonText('Start');\n    setPomoState(null);\n  }\n  function openSettingsDialog() {\n    setSettingsModalState(true);\n  }\n  function closeSettingsModal() {\n    setSettingsModalState(false);\n  }\n  function updatedPomoData(value) {\n    setPomodoroValues(value);\n    setPomoState('stop');\n    setIsStopDisabled(true);\n    closeSettingsModal();\n  }\n  function currentPomodoroCount(value) {\n    setPomodoroCount(value);\n  }\n\n  function currentPomodoroStatus(value) {\n    setPomodoroStatus(value);\n  }\n\n  return (\n    <Container fluid textAlign=\"center\">\n      <ConfirmModal\n        isModalOpen={isModalOpen}\n        handleStop={handleStop.bind(this)}\n        stopClicked={stopClicked.bind(this)}\n\t\t\t/>\n      <SettingsModal closeModal={closeSettingsModal.bind(this)} isOpen={isSettingsModalOpen} updatedPomoData={updatedPomoData} />\n      <Settings openDialog={openSettingsDialog.bind(this)} />\n      <PomoCycles pomodoroCount={pomodoroCount} pomodoroState={{ pomoState, pomodoroStatus }} />\n      <StyledHeader>\n        <Pomodoro pomoState={pomoState} handleStartAgain={handleStartAgain.bind()} {...pomodoroValues} currentPomodoroCount={currentPomodoroCount} currentPomodoroStatus={currentPomodoroStatus} />\n      </StyledHeader>\n      <Grid stackable centered>\n        <Grid.Column width={3}>\n      <PomoButton handlePress={handleStart.bind(this)} buttonText={startButtonText} />\n    </Grid.Column>\n        <Grid.Column width={3}>\n      <ConfirmModal\n        isModalOpen={isModalOpen}\n        handleStop={handleStop.bind(this)}\n        stopClicked={stopClicked.bind(this)}\n\t\t\t\t\t/>\n      <PomoButton\n        handlePress={stopClicked.bind(this)}\n        isDisabled={isStopDisabled}\n        buttonText=\"Stop\"\n\t\t\t\t\t/>\n    </Grid.Column>\n      </Grid>\n      <Grid centered style={{ marginTop: '5em' }}>\n        <Grid.Row>\n      <Header as=\"h1\" style={{ color: 'white' }}>Pomodoros</Header>\n    </Grid.Row>\n        <Grid.Row>\n      <Stats today={pomodoroCount-1} />\n    </Grid.Row>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default App;\n","import Granim from 'granim'\nimport BackgroundImage from '../assests/aron-visuals-BXOXnQ26B7o-unsplash.jpg';\n\nvar granimInstance = new Granim({\n    element: '#image-blending',\n    direction: 'top-bottom',\n    isPausedWhenNotInView: true,\n    image : {\n        source: BackgroundImage,\n        blendingMode: 'multiply',\n        stretchMode: ['stretch-if-bigger', 'stretch'],\n    },\n    states : {\n        \"default-state\": {\n            gradients: [\n                ['#29323c', '#485563'],\n                ['#FF6B6B', '#556270'],\n                ['#80d3fe', '#7ea0c4'],\n                ['#f0ab51', '#eceba3']\n            ],\n            transitionSpeed: 7000\n        }\n    }\n});\n\nexport default granimInstance;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components';\n\nimport './granim/granim';\nimport './granim/granim.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}